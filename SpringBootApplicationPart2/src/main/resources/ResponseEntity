ResponseEntity — это специальный класс из Spring Framework, который позволяет разработчику настраивать HTTP-ответы в контроллерах. Он позволяет не только вернуть тело ответа, но и настроить заголовки и статус ответа. Это особенно полезно для RESTful веб-служб, где важно четко определять HTTP-статус и другие детали ответа.

Преимущества использования ResponseEntity
Настройка HTTP-статуса: Позволяет легко установить HTTP-статус, например, 200 OK, 201 Created, 404 Not Found и так далее.
Настройка заголовков: Позволяет добавлять/настраивать заголовки HTTP-ответа.
Гибкость: Позволяет возвращать различные типы данных и легко адаптировать ответ под различные условия.
Пример использования ResponseEntity
Рассмотрим несколько примеров использования ResponseEntity:

Пример 1: Возвращение объекта и HTTP-статуса 200 OK
@GetMapping("/{id}")
public ResponseEntity<News> getById(@PathVariable Long id) {
    News news = newsService.getById(id);
    if (news != null) {
        return ResponseEntity.ok(news); // Возвращает объект News с HTTP-статусом 200 OK
    } else {
        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(null); // Возвращает HTTP-статус 404 Not Found
    }
}
Пример 2: Возвращение объекта и HTTP-статуса 201 Created
@PostMapping
public ResponseEntity<News> create(@RequestBody News news) {
    News createdNews = newsService.create(news);
    return ResponseEntity.status(HttpStatus.CREATED).body(createdNews); // Возвращает объект News с HTTP-статусом 201 Created
}
Пример 3: Возвращение только HTTP-статуса
@DeleteMapping("/{id}")
public ResponseEntity<Void> deleteById(@PathVariable Long id) {
    News news = newsService.getById(id);
    if (news != null) {
        newsService.deleteById(id);
        return ResponseEntity.status(HttpStatus.NO_CONTENT).build(); // Возвращает HTTP-статус 204 No Content
    } else {
        return ResponseEntity.status(HttpStatus.NOT_FOUND).build(); // Возвращает HTTP-статус 404 Not Found
    }
}
Документация по ResponseEntity
ResponseEntity находится в пакете org.springframework.http, и его можно использовать с различными типами данных.

Документация на официальном сайте Spring: ResponseEntity.